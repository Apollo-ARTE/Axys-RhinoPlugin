{
  "api/Axys.AxysPlugin.html": {
    "href": "api/Axys.AxysPlugin.html",
    "title": "Class AxysPlugin | Axys",
    "summary": "Class AxysPlugin Namespace Axys Assembly RhinoPlugin.dll Entry point for the Axys Rhino plug-in. Rhino creates a single instance of this class which manages the plug-in life cycle. The plug-in logs its load and shutdown events using Logger. public class AxysPlugin : PlugIn Inheritance object PlugIn AxysPlugin Inherited Members PlugIn.LoadPlugIn(string, out Guid) PlugIn.Find(Assembly) PlugIn.Find(Guid) PlugIn.LoadComputeExtensionPlugins() PlugIn.GetPluginSettings(Guid, bool) PlugIn.SavePluginSettings(Guid) PlugIn.RaiseOnPlugInSettingsSavedEvent() PlugIn.FlushSettingsSavedQueue() PlugIn.Icon(Size) PlugIn.GetCommands() PlugIn.ResetMessageBoxes() PlugIn.CreateCommands() PlugIn.RegisterCommand(Command) PlugIn.GetPlugInObject() PlugIn.ShouldCallWriteDocument(FileWriteOptions) PlugIn.WriteDocument(RhinoDoc, BinaryArchiveWriter, FileWriteOptions) PlugIn.ReadDocument(RhinoDoc, BinaryArchiveReader, FileReadOptions) PlugIn.OptionsDialogPages(List<OptionsDialogPage>) PlugIn.DocumentPropertiesDialogPages(RhinoDoc, List<OptionsDialogPage>) PlugIn.ObjectPropertiesPages(List<ObjectPropertiesPage>) PlugIn.ObjectPropertiesPages(ObjectPropertiesPageCollection) PlugIn.GetLicense(LicenseBuildType, ValidateProductKeyDelegate, OnLeaseChangedDelegate) PlugIn.GetLicense(LicenseCapabilities, string, ValidateProductKeyDelegate, OnLeaseChangedDelegate) PlugIn.SetLicenseCapabilities(string, LicenseCapabilities, Guid) PlugIn.AskUserForLicense(LicenseBuildType, bool, string, object, ValidateProductKeyDelegate, OnLeaseChangedDelegate) PlugIn.ReturnLicense() PlugIn.GetLicenseOwner(out string, out string) PlugIn.SaveSettings() PlugIn.CommandSettings(string) PlugIn.GetPlugInInfo(Guid) PlugIn.PlugInExists(Guid, out bool, out bool) PlugIn.GetInstalledPlugIns() PlugIn.GetInstalledPlugIns(bool) PlugIn.GetInstalledPlugInNames() PlugIn.GetInstalledPlugInNames(PlugInType, bool, bool) PlugIn.GetInstalledPlugInNames(PlugInType, bool, bool, bool) PlugIn.GetInstalledPlugInFolders() PlugIn.NameFromPath(string) PlugIn.PathFromName(string) PlugIn.PathFromId(Guid) PlugIn.IdFromPath(string) PlugIn.IdFromName(string) PlugIn.LoadPlugIn(Guid) PlugIn.LoadPlugIn(Guid, bool, bool) PlugIn.GetEnglishCommandNames(Guid) PlugIn.SetLoadProtection(Guid, bool) PlugIn.GetLoadProtection(Guid, out bool) PlugIn.Assembly PlugIn.Id PlugIn.LicenseId PlugIn.Name PlugIn.Version PlugIn.Description PlugIn.LoadAtStartup PlugIn.LoadTime PlugIn.LocalPlugInName PlugIn.SettingsDirectoryAllUsers PlugIn.SettingsDirectory PlugIn.Settings PlugIn.WindowPositionSettings PlugIn.AskOnLoadProtection PlugIn.InstalledPlugInCount PlugIn.UnknownUserData PlugIn.SettingsSaved object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AxysPlugin() public AxysPlugin() Properties Instance Gets the singleton instance of the plug-in created by Rhino. public static AxysPlugin Instance { get; } Property Value AxysPlugin Methods OnLoad(ref string) Initializes the plug-in when Rhino loads it. protected override LoadReturnCode OnLoad(ref string errorMessage) Parameters errorMessage string Receives a description in case the plug-in fails to load. Returns LoadReturnCode The Rhino.PlugIns.LoadReturnCode describing load success. OnShutdown() Invoked by Rhino during application shutdown to perform cleanup. protected override void OnShutdown()"
  },
  "api/Axys.Commands.ExportToVision.html": {
    "href": "api/Axys.Commands.ExportToVision.html",
    "title": "Class ExportToVision | Axys",
    "summary": "Class ExportToVision Namespace Axys.Commands Assembly RhinoPlugin.dll Exports geometry to USDZ format and streams the file to connected Axys clients via WebSocket. public class ExportToVision : Command Inheritance object Command ExportToVision Inherited Members Command.IsValidCommandName(string) Command.GetMostRecentCommands() Command.RunProxyCommand(Command.RunCommandDelegate, RhinoDoc, object) Command.OnHelp() Command.GetCommandStack() Command.InCommand() Command.InScriptRunnerCommand() Command.IsCommand(string) Command.LookupCommandId(string, bool) Command.LookupCommandName(Guid, bool) Command.GetCommandNames(bool, bool) Command.DisplayHelp(Guid) Command.ReplayHistory(ReplayHistoryData) Command.LastCommandId Command.LastCommandResult Command.PlugIn Command.Id Command.LocalName Command.Settings Command.CommandContextHelpUrl Command.BeginCommand Command.EndCommand Command.UndoRedo object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExportToVision() Initializes a new instance of the command and stores it in Instance for access from script commands. public ExportToVision() Fields LastExportedUSDZPath File path of the most recently exported USDZ file. public static string LastExportedUSDZPath Field Value string SelectedObjectId Identifier of the object last selected for export. public static Guid SelectedObjectId Field Value Guid Properties EnglishName Gets the name of the command. This method is abstract. public override string EnglishName { get; } Property Value string Instance Singleton instance created by Rhino so other classes can invoke the command. public static ExportToVision Instance { get; } Property Value ExportToVision Methods ExportUSDZ(dynamic) Handles the ExportUSDZ command received from a WebSocket connection. public static Result ExportUSDZ(dynamic message) Parameters message dynamic JSON payload describing the export request. Returns Result Rhino.Commands.Result.Success if the request is dispatched. Remarks Execution is marshalled onto the Rhino UI thread. RunCommand(RhinoDoc, RunMode) Prompts the user for an object selection and stores the identifier for export. If no object is selected the command attempts to create a pipe → mesh → block and selects the resulting instance. protected override Result RunCommand(RhinoDoc doc, RunMode mode) Parameters doc RhinoDoc Active Rhino document. mode RunMode Execution mode. Returns Result Rhino.Commands.Result.Success when an object is selected."
  },
  "api/Axys.Commands.StartAxysCommand.html": {
    "href": "api/Axys.Commands.StartAxysCommand.html",
    "title": "Class StartAxysCommand | Axys",
    "summary": "Class StartAxysCommand Namespace Axys.Commands Assembly RhinoPlugin.dll Rhino command that starts the local WebSocket server allowing external Axys clients to connect and exchange messages. public class StartAxysCommand : Command Inheritance object Command StartAxysCommand Inherited Members Command.IsValidCommandName(string) Command.GetMostRecentCommands() Command.RunProxyCommand(Command.RunCommandDelegate, RhinoDoc, object) Command.OnHelp() Command.GetCommandStack() Command.InCommand() Command.InScriptRunnerCommand() Command.IsCommand(string) Command.LookupCommandId(string, bool) Command.LookupCommandName(Guid, bool) Command.GetCommandNames(bool, bool) Command.DisplayHelp(Guid) Command.ReplayHistory(ReplayHistoryData) Command.LastCommandId Command.LastCommandResult Command.PlugIn Command.Id Command.LocalName Command.Settings Command.CommandContextHelpUrl Command.BeginCommand Command.EndCommand Command.UndoRedo object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EnglishName Gets the name of the command. This method is abstract. public override string EnglishName { get; } Property Value string Instance Singleton instance created by Rhino so the command can be executed programmatically. public static StartAxysCommand Instance { get; } Property Value StartAxysCommand Methods RunCommand(RhinoDoc, RunMode) Starts the WebSocket server on the local machine. protected override Result RunCommand(RhinoDoc doc, RunMode mode) Parameters doc RhinoDoc Active Rhino document. mode RunMode Command run mode. Returns Result Success if the server was started."
  },
  "api/Axys.Commands.TrackObjectCommand.html": {
    "href": "api/Axys.Commands.TrackObjectCommand.html",
    "title": "Class TrackObjectCommand | Axys",
    "summary": "Class TrackObjectCommand Namespace Axys.Commands Assembly RhinoPlugin.dll Wraps ExecuteTrackObjectLogic(RhinoDoc) in a Rhino command so object tracking can be invoked interactively. public class TrackObjectCommand : Command Inheritance object Command TrackObjectCommand Inherited Members Command.IsValidCommandName(string) Command.GetMostRecentCommands() Command.RunProxyCommand(Command.RunCommandDelegate, RhinoDoc, object) Command.OnHelp() Command.GetCommandStack() Command.InCommand() Command.InScriptRunnerCommand() Command.IsCommand(string) Command.LookupCommandId(string, bool) Command.LookupCommandName(Guid, bool) Command.GetCommandNames(bool, bool) Command.DisplayHelp(Guid) Command.ReplayHistory(ReplayHistoryData) Command.LastCommandId Command.LastCommandResult Command.PlugIn Command.Id Command.LocalName Command.Settings Command.CommandContextHelpUrl Command.BeginCommand Command.EndCommand Command.UndoRedo object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EnglishName Gets the name of the command. This method is abstract. public override string EnglishName { get; } Property Value string Instance Singleton instance created by Rhino. public static TrackObjectCommand Instance { get; } Property Value TrackObjectCommand Methods RunCommand(RhinoDoc, RunMode) Executes the tracking routine and sends object information over WebSocket. protected override Result RunCommand(RhinoDoc doc, RunMode mode) Parameters doc RhinoDoc Active Rhino document. mode RunMode Execution mode. Returns Result Result of the tracking operation."
  },
  "api/Axys.Commands.html": {
    "href": "api/Axys.Commands.html",
    "title": "Namespace Axys.Commands | Axys",
    "summary": "Namespace Axys.Commands Classes ExportToVision Exports geometry to USDZ format and streams the file to connected Axys clients via WebSocket. StartAxysCommand Rhino command that starts the local WebSocket server allowing external Axys clients to connect and exchange messages. TrackObjectCommand Wraps ExecuteTrackObjectLogic(RhinoDoc) in a Rhino command so object tracking can be invoked interactively."
  },
  "api/Axys.Managers.Geometry.ExportHelpers.ExportResult.html": {
    "href": "api/Axys.Managers.Geometry.ExportHelpers.ExportResult.html",
    "title": "Struct ExportHelpers.ExportResult | Axys",
    "summary": "Struct ExportHelpers.ExportResult Namespace Axys.Managers.Geometry Assembly RhinoPlugin.dll Result information returned from an export operation. public struct ExportHelpers.ExportResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Path Location of the generated file. public string Path Field Value string Success Whether the export succeeded. public bool Success Field Value bool"
  },
  "api/Axys.Managers.Geometry.ExportHelpers.html": {
    "href": "api/Axys.Managers.Geometry.ExportHelpers.html",
    "title": "Class ExportHelpers | Axys",
    "summary": "Class ExportHelpers Namespace Axys.Managers.Geometry Assembly RhinoPlugin.dll Helper routines used during USDZ export operations. public static class ExportHelpers Inheritance object ExportHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CalculateBlockInstanceOrigin(RhinoObject) Calculates the origin point of a block instance by combining the bounding boxes of its contained geometry. public static Point3d CalculateBlockInstanceOrigin(RhinoObject obj) Parameters obj RhinoObject The instance object to evaluate. Returns Point3d Center point of the block instance or Rhino.Geometry.Point3d.Unset on failure. ExportSelectedObjectToUSDZ(RhinoDoc, GeometryBase, Guid) Exports the specified geometry to a temporary USDZ file. public static ExportHelpers.ExportResult ExportSelectedObjectToUSDZ(RhinoDoc doc, GeometryBase preparedGeometry, Guid objectId) Parameters doc RhinoDoc Active Rhino document. preparedGeometry GeometryBase Geometry already prepared for export. objectId Guid Identifier of the object being exported. Returns ExportHelpers.ExportResult Information about the exported file."
  },
  "api/Axys.Managers.Geometry.GeometryConversion.html": {
    "href": "api/Axys.Managers.Geometry.GeometryConversion.html",
    "title": "Class GeometryConversion | Axys",
    "summary": "Class GeometryConversion Namespace Axys.Managers.Geometry Assembly RhinoPlugin.dll Utility methods that convert Rhino geometry into forms suitable for USDZ export. public static class GeometryConversion Inheritance object GeometryConversion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertMultipleCurvesToJoinedPipe(List<Curve>, RhinoDoc, double) Converts a collection of curves to pipe Breps and joins them into one Brep. public static Brep ConvertMultipleCurvesToJoinedPipe(List<Curve> curves, RhinoDoc doc, double pipeRadius) Parameters curves List<Curve> Curves to pipe. doc RhinoDoc Active Rhino document. pipeRadius double Radius of the pipe. Returns Brep Joined Brep of all pipes or null if conversion fails. ConvertPolyCurveToBrep(PolyCurve, RhinoDoc, double) Creates a Brep pipe along each segment of a polycurve and joins them into a single Brep. public static Brep ConvertPolyCurveToBrep(PolyCurve polyCurve, RhinoDoc doc, double pipeRadius) Parameters polyCurve PolyCurve The polycurve to convert. doc RhinoDoc Active Rhino document. pipeRadius double Radius of the generated pipes. Returns Brep A joined Brep representing the pipe or null on failure. PrepareGeometryForExport(RhinoDoc, RhinoObject) Converts the selected object into geometry that can be exported as USDZ. Handles curves, blocks, extrusions and meshes. public static GeometryBase PrepareGeometryForExport(RhinoDoc doc, RhinoObject selectedObj) Parameters doc RhinoDoc Active Rhino document. selectedObj RhinoObject Object chosen for export. Returns GeometryBase Geometry ready for export or null if conversion fails."
  },
  "api/Axys.Managers.Geometry.html": {
    "href": "api/Axys.Managers.Geometry.html",
    "title": "Namespace Axys.Managers.Geometry | Axys",
    "summary": "Namespace Axys.Managers.Geometry Classes ExportHelpers Helper routines used during USDZ export operations. GeometryConversion Utility methods that convert Rhino geometry into forms suitable for USDZ export. Structs ExportHelpers.ExportResult Result information returned from an export operation."
  },
  "api/Axys.Managers.Networking.MessageHandler.html": {
    "href": "api/Axys.Managers.Networking.MessageHandler.html",
    "title": "Class MessageHandler | Axys",
    "summary": "Class MessageHandler Namespace Axys.Managers.Networking Assembly RhinoPlugin.dll Provides helper methods for creating JSON messages exchanged via WebSocket. public class MessageHandler Inheritance object MessageHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateAndSerializeMessage(string, string) Creates a WebSocketMessage and serializes it to JSON. public static string CreateAndSerializeMessage(string type, string description) Parameters type string Message type such as info or error. description string Human readable message text. Returns string JSON encoded message."
  },
  "api/Axys.Managers.Networking.USDZExportManager.html": {
    "href": "api/Axys.Managers.Networking.USDZExportManager.html",
    "title": "Class USDZExportManager | Axys",
    "summary": "Class USDZExportManager Namespace Axys.Managers.Networking Assembly RhinoPlugin.dll Sends exported USDZ files to connected clients in chunks over WebSocket. public static class USDZExportManager Inheritance object USDZExportManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExecuteExportAsync(byte[], string) Streams a USDZ file to all connected clients. public static Task ExecuteExportAsync(byte[] fileBytes, string filePath) Parameters fileBytes byte[] Contents of the USDZ file. filePath string Original path to the file on disk for metadata. Returns Task"
  },
  "api/Axys.Managers.Networking.WebSocketServerManager.html": {
    "href": "api/Axys.Managers.Networking.WebSocketServerManager.html",
    "title": "Class WebSocketServerManager | Axys",
    "summary": "Class WebSocketServerManager Namespace Axys.Managers.Networking Assembly RhinoPlugin.dll Manages the WebSocket server used for communicating with Axys clients. public static class WebSocketServerManager Inheritance object WebSocketServerManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BroadcastBinary(byte[]) Sends raw binary data to all connected WebSocket clients. public static Task BroadcastBinary(byte[] data) Parameters data byte[] Byte array to transmit. Returns Task BroadcastMessage(string) Sends a text message to all connected WebSocket clients. public static void BroadcastMessage(string message) Parameters message string UTF-8 encoded text message. GetLocalIPAddressOfSelf() Attempts to determine a non-loopback IPv4 address for this machine. public static string GetLocalIPAddressOfSelf() Returns string IP address string. Exceptions Exception Thrown if no suitable address is found. IsServerRunning() Determines whether the server is active and has connected clients. public static bool IsServerRunning() Returns bool True if at least one WebSocket connection is available. ProcessUpdateMessage(string) Processes a position update message received from a client. Moves the referenced Rhino object to the specified coordinates. public static void ProcessUpdateMessage(string json) Parameters json string JSON update payload. StartServer() Starts the WebSocket server and begins listening for client connections. public static void StartServer()"
  },
  "api/Axys.Managers.Networking.html": {
    "href": "api/Axys.Managers.Networking.html",
    "title": "Namespace Axys.Managers.Networking | Axys",
    "summary": "Namespace Axys.Managers.Networking Classes MessageHandler Provides helper methods for creating JSON messages exchanged via WebSocket. USDZExportManager Sends exported USDZ files to connected clients in chunks over WebSocket. WebSocketServerManager Manages the WebSocket server used for communicating with Axys clients."
  },
  "api/Axys.Managers.ObjectHandling.MaterialManager.html": {
    "href": "api/Axys.Managers.ObjectHandling.MaterialManager.html",
    "title": "Class MaterialManager | Axys",
    "summary": "Class MaterialManager Namespace Axys.Managers.ObjectHandling Assembly RhinoPlugin.dll Utility functions for assigning and selecting materials on Rhino objects. public class MaterialManager Inheritance object MaterialManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyMaterialIfMissing(RhinoObject, RhinoDoc, int) Applies a material to the given object if it does not already have one. public static void ApplyMaterialIfMissing(RhinoObject rhObj, RhinoDoc doc, int materialIndex) Parameters rhObj RhinoObject Rhino object to modify. doc RhinoDoc Active Rhino document. materialIndex int Index of the material to assign. SelectMaterial(RhinoDoc) Displays a Rhino UI prompt allowing the user to choose a material. Creates a default material when none exist. public static int SelectMaterial(RhinoDoc doc) Parameters doc RhinoDoc Active Rhino document. Returns int Index of the chosen material."
  },
  "api/Axys.Managers.ObjectHandling.ObjectPositionManager.html": {
    "href": "api/Axys.Managers.ObjectHandling.ObjectPositionManager.html",
    "title": "Class ObjectPositionManager | Axys",
    "summary": "Class ObjectPositionManager Namespace Axys.Managers.ObjectHandling Assembly RhinoPlugin.dll Provides helper methods for querying and modifying object positions within the Rhino document. public class ObjectPositionManager Inheritance object ObjectPositionManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ObjectPositionManager(RhinoDoc) Initializes a new instance bound to the specified document. public ObjectPositionManager(RhinoDoc doc) Parameters doc RhinoDoc Active Rhino document. Methods CreateObjectData(Guid) Builds a RhinoObjectData structure describing a single object. public RhinoObjectData CreateObjectData(Guid objectId) Parameters objectId Guid Identifier of the object. Returns RhinoObjectData Serialized data for sending over WebSocket. CreateObjectDataBatch(List<RhinoObjectData>) Packages multiple RhinoObjectData entries into a batch message. public RhinoObjectDataBatch CreateObjectDataBatch(List<RhinoObjectData> objectDataList) Parameters objectDataList List<RhinoObjectData> Objects to include in the batch. Returns RhinoObjectDataBatch Batch container object. GetAbsolutePosition(Guid) Calculates the absolute world position of an object. public Point3d GetAbsolutePosition(Guid objectId) Parameters objectId Guid Object identifier. Returns Point3d World coordinate of the object center or Rhino.Geometry.Point3d.Unset if not found. MoveObject(Guid, Point3d) Moves an object to the given position in world coordinates. public bool MoveObject(Guid objectId, Point3d newPosition) Parameters objectId Guid Identifier of the object to move. newPosition Point3d Target world position. Returns bool True if the move succeeded."
  },
  "api/Axys.Managers.ObjectHandling.SelectionObjectManager.html": {
    "href": "api/Axys.Managers.ObjectHandling.SelectionObjectManager.html",
    "title": "Class SelectionObjectManager | Axys",
    "summary": "Class SelectionObjectManager Namespace Axys.Managers.ObjectHandling Assembly RhinoPlugin.dll Helper methods for selecting geometry and resolving instance definitions. public static class SelectionObjectManager Inheritance object SelectionObjectManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods EnsureObjectIsSelected(RhinoDoc, Guid) Ensures an object is selected, optionally prompting the user. public static Guid EnsureObjectIsSelected(RhinoDoc doc, Guid currentId) Parameters doc RhinoDoc Active Rhino document. currentId Guid Pre-selected object identifier. Returns Guid The confirmed object identifier or Empty if selection failed. FindInstanceDefinitionByGuid(RhinoDoc, Guid) Retrieves an instance definition by Guid to avoid name collisions. public static InstanceDefinition FindInstanceDefinitionByGuid(RhinoDoc doc, Guid id) Parameters doc RhinoDoc Active Rhino document. id Guid Identifier of the instance definition. Returns InstanceDefinition The instance definition or null if not found. ProcessInstanceReference(InstanceReferenceGeometry, RhinoDoc, List<Brep>, List<Mesh>, List<Curve>) Expands an instance reference and collects its geometry into separate lists. public static void ProcessInstanceReference(InstanceReferenceGeometry instanceRef, RhinoDoc doc, List<Brep> breps, List<Mesh> meshes, List<Curve> curves) Parameters instanceRef InstanceReferenceGeometry Reference geometry pointing to the block instance. doc RhinoDoc Active Rhino document. breps List<Brep> Collection receiving Brep geometry. meshes List<Mesh> Collection receiving Mesh geometry. curves List<Curve> Collection receiving Curve geometry."
  },
  "api/Axys.Managers.ObjectHandling.html": {
    "href": "api/Axys.Managers.ObjectHandling.html",
    "title": "Namespace Axys.Managers.ObjectHandling | Axys",
    "summary": "Namespace Axys.Managers.ObjectHandling Classes MaterialManager Utility functions for assigning and selecting materials on Rhino objects. ObjectPositionManager Provides helper methods for querying and modifying object positions within the Rhino document. SelectionObjectManager Helper methods for selecting geometry and resolving instance definitions."
  },
  "api/Axys.Models.RhinoObjectInfo.html": {
    "href": "api/Axys.Models.RhinoObjectInfo.html",
    "title": "Class RhinoObjectInfo | Axys",
    "summary": "Class RhinoObjectInfo Namespace Axys.Models Assembly RhinoPlugin.dll Lightweight container used to expose basic object information to clients. public class RhinoObjectInfo Inheritance object RhinoObjectInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id Unique identifier of the object. public Guid Id { get; set; } Property Value Guid Name Display name. public string Name { get; set; } Property Value string ObjectType Type of Rhino object. public string ObjectType { get; set; } Property Value string"
  },
  "api/Axys.Models.html": {
    "href": "api/Axys.Models.html",
    "title": "Namespace Axys.Models | Axys",
    "summary": "Namespace Axys.Models Classes RhinoObjectInfo Lightweight container used to expose basic object information to clients."
  },
  "api/Axys.ScriptPipeMeshBlockCommand.html": {
    "href": "api/Axys.ScriptPipeMeshBlockCommand.html",
    "title": "Class ScriptPipeMeshBlockCommand | Axys",
    "summary": "Class ScriptPipeMeshBlockCommand Namespace Axys Assembly RhinoPlugin.dll Automates the creation of a pipe from selected curves, meshes the result and defines a block instance from those meshes. public class ScriptPipeMeshBlockCommand : Command Inheritance object Command ScriptPipeMeshBlockCommand Inherited Members Command.IsValidCommandName(string) Command.GetMostRecentCommands() Command.RunProxyCommand(Command.RunCommandDelegate, RhinoDoc, object) Command.OnHelp() Command.GetCommandStack() Command.InCommand() Command.InScriptRunnerCommand() Command.IsCommand(string) Command.LookupCommandId(string, bool) Command.LookupCommandName(Guid, bool) Command.GetCommandNames(bool, bool) Command.DisplayHelp(Guid) Command.ReplayHistory(ReplayHistoryData) Command.LastCommandId Command.LastCommandResult Command.PlugIn Command.Id Command.LocalName Command.Settings Command.CommandContextHelpUrl Command.BeginCommand Command.EndCommand Command.UndoRedo object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EnglishName Gets the name of the command. This method is abstract. public override string EnglishName { get; } Property Value string Instance Singleton instance of the command. public static ScriptPipeMeshBlockCommand Instance { get; } Property Value ScriptPipeMeshBlockCommand Methods RunCommand(RhinoDoc, RunMode) Pipes the selected curves, converts them to meshes and creates a block instance. protected override Result RunCommand(RhinoDoc doc, RunMode mode) Parameters doc RhinoDoc Active Rhino document. mode RunMode Execution mode. Returns Result Result of the command execution."
  },
  "api/Axys.Utilities.CommandUtilities.html": {
    "href": "api/Axys.Utilities.CommandUtilities.html",
    "title": "Class CommandUtilities | Axys",
    "summary": "Class CommandUtilities Namespace Axys.Utilities Assembly RhinoPlugin.dll Shared command implementations that can be invoked from multiple entry points. public static class CommandUtilities Inheritance object CommandUtilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExecuteTrackObjectLogic(RhinoDoc) Tracks selected objects and broadcasts their positions via WebSocket. public static Result ExecuteTrackObjectLogic(RhinoDoc doc) Parameters doc RhinoDoc Active Rhino document. Returns Result Command result indicating success or failure."
  },
  "api/Axys.Utilities.html": {
    "href": "api/Axys.Utilities.html",
    "title": "Namespace Axys.Utilities | Axys",
    "summary": "Namespace Axys.Utilities Classes CommandUtilities Shared command implementations that can be invoked from multiple entry points."
  },
  "api/Axys.html": {
    "href": "api/Axys.html",
    "title": "Namespace Axys | Axys",
    "summary": "Namespace Axys Classes AxysPlugin Entry point for the Axys Rhino plug-in. Rhino creates a single instance of this class which manages the plug-in life cycle. The plug-in logs its load and shutdown events using Logger. ScriptPipeMeshBlockCommand Automates the creation of a pipe from selected curves, meshes the result and defines a block instance from those meshes."
  },
  "api/RhinoPlugin.GeometryProcessingException.html": {
    "href": "api/RhinoPlugin.GeometryProcessingException.html",
    "title": "Class GeometryProcessingException | Axys",
    "summary": "Class GeometryProcessingException Namespace RhinoPlugin Assembly RhinoPlugin.dll Thrown when geometry processing fails during export or conversion. public class GeometryProcessingException : Exception, ISerializable Inheritance object Exception GeometryProcessingException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GeometryProcessingException(string) public GeometryProcessingException(string message) Parameters message string GeometryProcessingException(string, Exception) public GeometryProcessingException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/RhinoPlugin.GeometrySelectionException.html": {
    "href": "api/RhinoPlugin.GeometrySelectionException.html",
    "title": "Class GeometrySelectionException | Axys",
    "summary": "Class GeometrySelectionException Namespace RhinoPlugin Assembly RhinoPlugin.dll Thrown when geometry cannot be selected or resolved. public class GeometrySelectionException : Exception, ISerializable Inheritance object Exception GeometrySelectionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GeometrySelectionException(string) public GeometrySelectionException(string message) Parameters message string GeometrySelectionException(string, Exception) public GeometrySelectionException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/RhinoPlugin.html": {
    "href": "api/RhinoPlugin.html",
    "title": "Namespace RhinoPlugin | Axys",
    "summary": "Namespace RhinoPlugin Classes GeometryProcessingException Thrown when geometry processing fails during export or conversion. GeometrySelectionException Thrown when geometry cannot be selected or resolved."
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started | Axys",
    "summary": "Getting Started"
  },
  "index.html": {
    "href": "index.html",
    "title": "Axys Rhino Plugin Documentation | Axys",
    "summary": "Axys Rhino Plugin Documentation Welcome to the official documentation for the Axys Rhino Plugin. Overview Axys is a powerful plugin for Rhino that provides advanced functionality for: Geometry Processing – Advanced geometric operations and conversions Export Capabilities – Export to various formats including Vision Object Management – Comprehensive object handling and material management Network Integration – WebSocket communication and networking features Command Interface – Rich set of commands for plugin interaction Quick Start Installation Guide Getting Started Basic Usage API Reference Explore the complete API Documentation to understand all available classes, methods, and properties. Key Components AxysPlugin – Main plugin class Commands – Available plugin commands Managers – Core management functionality Models – Data models and structures Core Features Geometry Management The Axys plugin provides sophisticated geometry processing capabilities: Advanced mesh operations Geometry conversion utilities Export helpers for various formats Command System A comprehensive set of commands for: Starting and managing the plugin Object tracking and selection Export operations to Vision platform Networking Built-in networking capabilities including: WebSocket server management Message handling Real-time communication features Material and Object Handling Complete object management system: Material management Object positioning Selection management Examples Check out our examples section for practical implementation examples and code snippets. Support For questions and support, please refer to our troubleshooting guide or explore the comprehensive API documentation. Getting Help Browse the API Reference for detailed technical information Read the User Guide for step-by-step instructions Check Examples for practical use cases"
  },
  "introduction.html": {
    "href": "introduction.html",
    "title": "Introduction | Axys",
    "summary": "Introduction"
  }
}