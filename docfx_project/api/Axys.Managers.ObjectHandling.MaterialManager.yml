### YamlMime:ManagedReference
items:
- uid: Axys.Managers.ObjectHandling.MaterialManager
  commentId: T:Axys.Managers.ObjectHandling.MaterialManager
  id: MaterialManager
  parent: Axys.Managers.ObjectHandling
  children:
  - Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing(Rhino.DocObjects.RhinoObject,Rhino.RhinoDoc,System.Int32)
  - Axys.Managers.ObjectHandling.MaterialManager.SelectMaterial(Rhino.RhinoDoc)
  langs:
  - csharp
  - vb
  name: MaterialManager
  nameWithType: MaterialManager
  fullName: Axys.Managers.ObjectHandling.MaterialManager
  type: Class
  source:
    remote:
      path: Managers/ObjectHandling/MaterialManager.cs
      branch: feat/docfx
      repo: https://github.com/Apollo-ARTE/RhinoPlugin.git
    id: MaterialManager
    path: ../Managers/ObjectHandling/MaterialManager.cs
    startLine: 11
  assemblies:
  - RhinoPlugin
  namespace: Axys.Managers.ObjectHandling
  summary: Utility functions for assigning and selecting materials on Rhino objects.
  example: []
  syntax:
    content: public class MaterialManager
    content.vb: Public Class MaterialManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing(Rhino.DocObjects.RhinoObject,Rhino.RhinoDoc,System.Int32)
  commentId: M:Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing(Rhino.DocObjects.RhinoObject,Rhino.RhinoDoc,System.Int32)
  id: ApplyMaterialIfMissing(Rhino.DocObjects.RhinoObject,Rhino.RhinoDoc,System.Int32)
  parent: Axys.Managers.ObjectHandling.MaterialManager
  langs:
  - csharp
  - vb
  name: ApplyMaterialIfMissing(RhinoObject, RhinoDoc, int)
  nameWithType: MaterialManager.ApplyMaterialIfMissing(RhinoObject, RhinoDoc, int)
  fullName: Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing(Rhino.DocObjects.RhinoObject, Rhino.RhinoDoc, int)
  type: Method
  source:
    remote:
      path: Managers/ObjectHandling/MaterialManager.cs
      branch: feat/docfx
      repo: https://github.com/Apollo-ARTE/RhinoPlugin.git
    id: ApplyMaterialIfMissing
    path: ../Managers/ObjectHandling/MaterialManager.cs
    startLine: 19
  assemblies:
  - RhinoPlugin
  namespace: Axys.Managers.ObjectHandling
  summary: Applies a material to the given object if it does not already have one.
  example: []
  syntax:
    content: public static void ApplyMaterialIfMissing(RhinoObject rhObj, RhinoDoc doc, int materialIndex)
    parameters:
    - id: rhObj
      type: Rhino.DocObjects.RhinoObject
      description: Rhino object to modify.
    - id: doc
      type: Rhino.RhinoDoc
      description: Active Rhino document.
    - id: materialIndex
      type: System.Int32
      description: Index of the material to assign.
    content.vb: Public Shared Sub ApplyMaterialIfMissing(rhObj As RhinoObject, doc As RhinoDoc, materialIndex As Integer)
  overload: Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing*
  nameWithType.vb: MaterialManager.ApplyMaterialIfMissing(RhinoObject, RhinoDoc, Integer)
  fullName.vb: Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing(Rhino.DocObjects.RhinoObject, Rhino.RhinoDoc, Integer)
  name.vb: ApplyMaterialIfMissing(RhinoObject, RhinoDoc, Integer)
- uid: Axys.Managers.ObjectHandling.MaterialManager.SelectMaterial(Rhino.RhinoDoc)
  commentId: M:Axys.Managers.ObjectHandling.MaterialManager.SelectMaterial(Rhino.RhinoDoc)
  id: SelectMaterial(Rhino.RhinoDoc)
  parent: Axys.Managers.ObjectHandling.MaterialManager
  langs:
  - csharp
  - vb
  name: SelectMaterial(RhinoDoc)
  nameWithType: MaterialManager.SelectMaterial(RhinoDoc)
  fullName: Axys.Managers.ObjectHandling.MaterialManager.SelectMaterial(Rhino.RhinoDoc)
  type: Method
  source:
    remote:
      path: Managers/ObjectHandling/MaterialManager.cs
      branch: feat/docfx
      repo: https://github.com/Apollo-ARTE/RhinoPlugin.git
    id: SelectMaterial
    path: ../Managers/ObjectHandling/MaterialManager.cs
    startLine: 73
  assemblies:
  - RhinoPlugin
  namespace: Axys.Managers.ObjectHandling
  summary: >-
    Displays a Rhino UI prompt allowing the user to choose a material.

    Creates a default material when none exist.
  example: []
  syntax:
    content: public static int SelectMaterial(RhinoDoc doc)
    parameters:
    - id: doc
      type: Rhino.RhinoDoc
      description: Active Rhino document.
    return:
      type: System.Int32
      description: Index of the chosen material.
    content.vb: Public Shared Function SelectMaterial(doc As RhinoDoc) As Integer
  overload: Axys.Managers.ObjectHandling.MaterialManager.SelectMaterial*
references:
- uid: Axys.Managers.ObjectHandling
  commentId: N:Axys.Managers.ObjectHandling
  href: Axys.html
  name: Axys.Managers.ObjectHandling
  nameWithType: Axys.Managers.ObjectHandling
  fullName: Axys.Managers.ObjectHandling
  spec.csharp:
  - uid: Axys
    name: Axys
    href: Axys.html
  - name: .
  - uid: Axys.Managers
    name: Managers
    href: Axys.Managers.html
  - name: .
  - uid: Axys.Managers.ObjectHandling
    name: ObjectHandling
    href: Axys.Managers.ObjectHandling.html
  spec.vb:
  - uid: Axys
    name: Axys
    href: Axys.html
  - name: .
  - uid: Axys.Managers
    name: Managers
    href: Axys.Managers.html
  - name: .
  - uid: Axys.Managers.ObjectHandling
    name: ObjectHandling
    href: Axys.Managers.ObjectHandling.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing*
  commentId: Overload:Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing
  href: Axys.Managers.ObjectHandling.MaterialManager.html#Axys_Managers_ObjectHandling_MaterialManager_ApplyMaterialIfMissing_Rhino_DocObjects_RhinoObject_Rhino_RhinoDoc_System_Int32_
  name: ApplyMaterialIfMissing
  nameWithType: MaterialManager.ApplyMaterialIfMissing
  fullName: Axys.Managers.ObjectHandling.MaterialManager.ApplyMaterialIfMissing
- uid: Rhino.DocObjects.RhinoObject
  commentId: T:Rhino.DocObjects.RhinoObject
  parent: Rhino.DocObjects
  isExternal: true
  name: RhinoObject
  nameWithType: RhinoObject
  fullName: Rhino.DocObjects.RhinoObject
- uid: Rhino.RhinoDoc
  commentId: T:Rhino.RhinoDoc
  parent: Rhino
  isExternal: true
  name: RhinoDoc
  nameWithType: RhinoDoc
  fullName: Rhino.RhinoDoc
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Rhino.DocObjects
  commentId: N:Rhino.DocObjects
  isExternal: true
  name: Rhino.DocObjects
  nameWithType: Rhino.DocObjects
  fullName: Rhino.DocObjects
  spec.csharp:
  - uid: Rhino
    name: Rhino
    isExternal: true
  - name: .
  - uid: Rhino.DocObjects
    name: DocObjects
    isExternal: true
  spec.vb:
  - uid: Rhino
    name: Rhino
    isExternal: true
  - name: .
  - uid: Rhino.DocObjects
    name: DocObjects
    isExternal: true
- uid: Rhino
  commentId: N:Rhino
  isExternal: true
  name: Rhino
  nameWithType: Rhino
  fullName: Rhino
- uid: Axys.Managers.ObjectHandling.MaterialManager.SelectMaterial*
  commentId: Overload:Axys.Managers.ObjectHandling.MaterialManager.SelectMaterial
  href: Axys.Managers.ObjectHandling.MaterialManager.html#Axys_Managers_ObjectHandling_MaterialManager_SelectMaterial_Rhino_RhinoDoc_
  name: SelectMaterial
  nameWithType: MaterialManager.SelectMaterial
  fullName: Axys.Managers.ObjectHandling.MaterialManager.SelectMaterial
